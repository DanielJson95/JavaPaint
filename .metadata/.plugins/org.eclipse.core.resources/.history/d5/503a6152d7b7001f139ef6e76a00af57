package com.djson95.javapaint;

import java.awt.Color;
import java.awt.Dimension;
import java.io.Console;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

import javax.swing.JFrame;

import com.djson95.javapaint.model.Drawing;
import com.djson95.javapaint.model.FileHandler;

import se.kau.isgc08.lab4.view.DrawingPanel;

public class Main {

	public static void main(String[] args) {
		var frame = new JFrame();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(new Dimension(400, 300));
		frame.setVisible(true);
		
		// Skapa första ritningen
		var drawing = new Drawing();
		drawing.addCircle(10, 10, 150, 150, 3, Color.BLACK, Color.GREEN);
		
		// Spara första ritningen
		saveDrawing(drawing, "circle.dat");
		
		// Skapa andra ritningen
		drawing = new Drawing();
		drawing.addRectangle(20, 30, 100, 100, 3, Color.BLACK, Color.RED);
		
		// Spara andra ritningen
		saveDrawing(drawing, "rect.dat");
		
		// Välj ritning att ladda
		System.out.print("Enter 'c' to load circle, anything else to load rectangle: ");
		try (Scanner scanner = new Scanner(System.in)) {
			drawing = loadDrawing(scanner.nextLine().toLowerCase().trim());
		}
		
		// Något gick fel
		if (drawing == null) {
			System.out.println("Oops");
			System.out.println("Exiting...");
			System.exit(0);
		}
		
		// Visa laddad ritning
		var drawingPanel = new DrawingPanel(drawing.getRootElement());
		drawingPanel.setBackground(Color.WHITE);
		frame.add(drawingPanel);
		
		frame.repaint();
	}

	public static void saveDrawing(Drawing drawing, String name) {
		System.out.println("Saving drawing...");
		try {
			FileHandler.getInstance().saveDrawing(drawing, new File(name));
		} catch (IOException e) {
			System.out.println("Error saving drawing!");
			e.printStackTrace();
		}
	}
	
	public static Drawing loadDrawing(String choice) {
		System.out.println("Loading drawing...");
		Drawing drawing = null;
		try {
			String path = choice.equals("c") ? "circle.dat" : "rect.dat";
			drawing = FileHandler.getInstance().loadDrawing(new File(path));
		} catch (ClassNotFoundException | IOException e) {
			System.out.println("Error loading drawing!");
			e.printStackTrace();
		}
		return drawing;
	}
}
